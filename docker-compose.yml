version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: restaurant_postgres
    environment:
      POSTGRES_DB: restaurant_db
      POSTGRES_USER: restaurant_user
      POSTGRES_PASSWORD: restaurant_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restaurant_user -d restaurant_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: restaurant_backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/restaurant_db
      SPRING_DATASOURCE_USERNAME: restaurant_user
      SPRING_DATASOURCE_PASSWORD: restaurant_password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - restaurant_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build: ./frontend
    container_name: restaurant_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - restaurant_network

volumes:
  postgres_data:

networks:
  restaurant_network:
    driver: bridge